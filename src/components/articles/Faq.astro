---
import { Icon } from 'astro-icon/components';

export interface Props {
  questions: Array<{ question: string; answer: string }>;
}

const { questions } = Astro.props;
---

<section id="faq" class="faq-section article-section">
  <h2 class="faq-title">FAQ</h2>
  <div class="title-line"></div>

  <div class="faq-list">
    {
      questions.map((item) => (
        <details class="faq-item">
          <summary class="faq-question">
            <span class="faq-question-text">{item.question}</span>
            <Icon name="chevronDown" size={18} class="faq-icon" />
          </summary>
          <div class="faq-answer-container">
            <div class="faq-answer" set:html={item.answer} />
          </div>
        </details>
      ))
    }
  </div>
</section>

<style>
  .faq-section {
    max-width: 100%;
    margin: 2rem 0;
    padding: 1.5rem;
    border-radius: 8px;
    background-color: var(--contentBgColor);
    box-shadow: none;
    color: white;
  }

  .faq-title {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: bold;
  }

  .title-line {
    height: 1px;
    background: var(--mainBorderColor);
    margin: 1rem 0 2rem;
    width: 100%;
  }

  .faq-item {
    border-bottom: 1px solid var(--mainBorderColor);
    padding-bottom: 1rem;
  }

  .faq-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .faq-question {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: 0.75rem;
    border-radius: 8px;
    transition: background-color 0.3s ease-in-out, transform 0.2s ease-in-out;
  }

  .faq-question:hover {
    background-color: rgba(255, 255, 255, 0.05);
    transform: translateX(4px);
  }

  .faq-question::-webkit-details-marker {
    display: none;
  }

  .faq-item[open] .faq-question {
    background-color: rgba(255, 255, 255, 0.05);
  }

  .faq-item[open] .faq-question .faq-icon {
    transform: rotate(180deg);
  }

  .faq-question-text {
    font-weight: bold;
    font-size: 1rem;
    text-transform: uppercase;
  }

  .faq-icon {
    transition: transform 0.3s ease-in-out;
  }

  .faq-answer-container {
    max-height: 0;
    opacity: 0;
    transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
    overflow: hidden;
  }

  .faq-item[open] .faq-answer-container {
    max-height: 200px;
    opacity: 1;
  }

  .faq-answer {
    margin-top: 0.5rem;
    padding: 0.5rem 1rem;
    font-style: italic;
    font-size: 0.9rem;
  }

  .faq-answer a {
    color: var(--linkColor, lightblue);
    text-decoration: underline;
    font-weight: 500;
    transition: color 0.2s;
  }

  .faq-answer a:hover {
    color: var(--linkHoverColor, white);
    text-decoration: none;
  }

  .faq-answer ul {
    padding-left: 1.5rem;
    margin: 0.5rem 0;
  }

  .faq-answer li {
    margin-bottom: 0.3rem;
  }

  @media (max-width: 640px) {
    .faq-section {
      margin: 1rem 0;
      padding: 1rem;
    }

    .title-line {
      margin: 0.5rem 0 1.5rem;
    }

    .faq-title {
      font-size: 1.1rem;
      margin-bottom: 0.5rem;
    }

    .faq-question {
      padding: 0.5rem;
    }

    .faq-question-text {
      font-size: 0.9rem;
    }

    .faq-answer {
      padding: 0.5rem 0.5rem 0.5rem 1.5rem;
    }
  }

  @media (min-width: 768px) {
    .faq-title {
      font-size: 1.3rem;
    }

    .faq-question-text {
      font-size: 1rem;
    }
  }
</style>