---
import { getCollection, type CollectionEntry } from 'astro:content';
import { Astro } from 'astro';

const blogPosts = await getCollection('blog');

// –ü–æ–ª—É—á–∞–µ–º slug —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç—å–∏ –∏–∑ URL
const currentSlug = Astro.url.pathname.split('/').filter(Boolean).pop();

// –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç–∞—Ç—å–∏, –∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â—É—é
const otherPosts = blogPosts.filter((post) => post.slug !== currentSlug);

// –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç–∞—Ç—å–∏ –ø–æ –¥–∞—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
const sortedPosts = otherPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

// –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Å—Ç–∞—Ç—å–∏
const latestPosts = sortedPosts.slice(0, 3);
---

<div class="related-articles">
  <p class="articles">–î—Ä—É–≥–∏–µ —Å—Ç–∞—Ç—å–∏:</p>
  <div class="articles-list">
    {latestPosts.map((post) => (
      <a href={`/blog/${post.slug}/`} class="article-link">
        {post.data.title} üìñ
      </a>
    ))}
  </div>
</div>

<style>
  .related-articles {
    margin-top: 2rem;
  }

  .articles {
    font-weight: bold;
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .articles-list {
    display: flex;
    flex-direction: column;
    gap: 0.1rem;
  }

  .article-link {
    color: var(--color-text);
    text-decoration: none;
    font-size: .9rem;
    font-style: italic;
    padding-left: 1rem;
  }

  .article-link:hover {
    text-decoration: underline;
  }

  /* ==== –ú–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å ==== */
  @media (max-width: 640px) {
    .articles {
      text-align: center; 
    }
  }
</style>